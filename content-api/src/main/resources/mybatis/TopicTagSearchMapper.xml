<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.me2me.content.mapper.TopicTagSearchMapper">
  
  
	   <select id="getTopicIdsByTagAndSubTag" resultType="long">
		   	select DISTINCT topic_id from topic_tag_detail dt,
			(select id from topic_tag p where status=0 and (id=#{tagId} or pid=#{tagId})) tagId
			 where dt.status=0 and dt.tag_id = tagId.id
	   </select>
	   
     <select id="getKingdomsByTag" resultType="map">
		select t.*,td.last_price_incr from topic t
		left join topic_data td on  td.topic_id=t.id
		where 
			t.id in
				<foreach open="(" separator="," close=")" collection="topicIds" item="bid">
	        		#{bid}
	      		</foreach>
			
			and t.id not in (
				select data from user_dislike where uid=#{uid} and is_like=0 and type=1
			)
			<if test="blacklistUids!=null and blacklistUids.size() &gt; 0">
	      		and t.uid not in
	      		<foreach open="(" separator="," close=")" collection="topicIds" item="bid">
	        		#{bid}
	      		</foreach>
    		</if>
		  <choose>
             <when test="order=='price'">
                order by t.price DESC,t.id desc
             </when>
             <otherwise>
                order by td.last_price_incr DESC,t.id desc
              </otherwise>
           </choose>
		   limit ${(page-1)*pageSize},#{pageSize}
     </select>

	 <select id="getTagPriceAndKingdomCount" resultType="map">
		select 
			count(1) kingdomCount,
			sum(ts.price) tagPrice,
			(select count(DISTINCT uid) c from topic_fragment where topic_id in
				<foreach open="(" separator="," close=")" collection="topicIds" item="bid">
	        		#{bid}
	      		</foreach>
			)+FLOOR(sum(ct.read_count)/20) tagPersons
			from
			(select * from topic where id in
				<foreach open="(" separator="," close=")" collection="topicIds" item="bid">
	        		#{bid}
	      		</foreach>
			) ts,content ct
			where ts.id=ct.forward_cid and ct.type=3
	 </select>
	
	<select id="getSysTagCountInfo" resultType="map">
		SELECT t.*,
		( 
			select  sum(price) from topic where id in(
				select DISTINCT topic_id from topic_tag_detail dt,
				(select id from topic_tag p where status=0 and (id=#{tagId} or pid=#{tagId})) tagId
				 where dt.status=0 and dt.tag_id = tagId.id
			)
		) price
		FROM topic_tag t where t.is_sys=1
	</select>
	<select id="getTopicIdsByTag" resultType="int">
		select DISTINCT topic_id from topic_tag_detail dt,
		(select id from topic_tag p where status=0 and (id=#{tagId} or pid=#{tagId})) tagId
		 where dt.status=0 and dt.tag_id = tagId.id
	</select>
	<select id="getUserFavoTags" resultType="string">
		select tag from user_tag_like  where uid=#{uid} and score > 20 order by score DESC limit #{count}
	</select>
	
	<select id="getUserLikeTagAndSubTag" resultType="com.me2me.content.model.TagInfo">
		select t.id as tagId,t.tag as tagName from 
		topic_tag t,
		(select data from user_dislike where uid=#{uid} and is_like=#{isLike} and type=2) userlike 
		where t.id=userlike.data or t.pid=userlike.data
	</select>
	<select id="getUserLikeTag" resultType="com.me2me.content.model.TagInfo">
		select t.id as tagId,t.tag as tagName from 
		topic_tag t,
		(select data from user_dislike where uid=#{uid} and is_like=1 and type=2) userlike 
		where t.id=userlike.data
	</select>
	<select id="getUserTagListByType" resultType="map">
		select tt.id,tt.tag,tt.cover_img,ut.is_top FROM topic_tag tt,user_tag ut
		WHERE tt.id = ut.tag_id AND tt.status = 0
		AND ut.uid = #{uid}
		AND ut.type = #{type}
		ORDER BY ut.is_top DESC,ut.top_time DESC,tt.is_sys DESC
		LIMIT ${(page-1)*pageSize},#{pageSize}
	</select>
		<select id="getUserTagListOther" resultType="map">
	          select tt.id,tt.tag,tt.cover_img,ut.is_top,tt.is_sys FROM topic_tag tt
	          LEFT JOIN user_tag ut
	          ON tt.id = ut.tag_id AND ut.uid = #{uid}
	          WHERE
	          (ut.type IS NULL OR ut.type NOT IN (1,2))
	          AND tt.status = 0
	          and tt.is_sys = 1
	          ORDER BY tt.id DESC
	          LIMIT ${(page-1)*pageSize},#{pageSize}
	    </select>
   <select id="getKingdomsByTagInfo" resultType="map">
		select t.*,td.last_price_incr from topic t
		left join topic_data td on  td.topic_id=t.id
		where 
			t.id in
				<foreach open="(" separator="," close=")" collection="topicIds" item="bid">
	        		#{bid}
	      		</foreach>
			<if test="blacklistUids!=null and blacklistUids.size() &gt; 0">
	      		and t.uid not in
	      		<foreach open="(" separator="," close=")" collection="topicIds" item="bid">
	        		#{bid}
	      		</foreach>
    		</if>
		  <choose>
             <when test="order=='price'">
                order by t.price DESC,t.id desc
             </when>
             <otherwise>
                order by td.last_price_incr DESC,t.id desc
              </otherwise>
           </choose>
		   limit ${(page-1)*pageSize},#{pageSize}
     </select>
		<select id="getOtherNormalTag" resultType="map">
	           select tt.id,tt.tag,tt.cover_img,tt.is_sys FROM topic_tag tt
            	LEFT JOIN user_tag ut
	           ON tt.id = ut.tag_id AND ut.uid = #{uid}
	           WHERE (ut.type IS NULL OR ut.type NOT IN (1,2))
	           AND tt.status = 0
	         <if test="tagIds and tagIds.size() &gt; 0">
	      		and tt.id not in
	      		<foreach open="(" separator="," close=")" collection="tagIds" item="bid">
	        		#{bid}
	      		</foreach>
    		</if>
	           ORDER BY tt.is_sys DESC,ut.id DESC
	           LIMIT 1
	    </select>
	<select id="getUserLikeTagAndSubTagInfo" resultType="com.me2me.content.model.TagInfo">
		select t.id
		AS tagId,t.tag AS tagName FROM
		topic_tag t,
		(SELECT tag_id FROM user_tag WHERE uid=#{uid} and type = #{isLike})
		userlike
		WHERE t.id=userlike.tag_id OR t.pid=userlike.tag_id
	</select>

	<select id="getUserLikeTagInfo" resultType="com.me2me.content.model.TagInfo">
	select distinct t.id as
	tagId,t.tag as tagName,
	t.cover_img as coverImg
	from
	topic_tag t,
	(select tag_id from user_tag where uid=#{uid} and type =1) userlike
	,topic_tag_detail d
	where t.id=userlike.tag_id and t.status = 0
	and d.tag_id = t.id
	and d.topic_id in (select distinct t.id from topic t,topic_fragment f
	where t.id = f.topic_id and f.create_time > DATE_ADD(NOW(),interval
	#{minKingdomUpdateDays} day))
	and t.id in(select tag_id from topic_tag_detail group by tag_id having
	COUNT(topic_id)>#{minKingdomCount})
	</select>
		
	<select id="getUserFavoriteTags" resultType="com.me2me.content.model.TagInfo">
	select distinct tt.id as tagId,tt.tag as tagName,tt.cover_img as
	coverImg,ut.score from topic_tag tt,user_tag ut,topic_tag_detail d
	where tt.id = ut.tag_id and ut.type = 0 and ut.uid = #{uid} and
	ut.score>20
	and d.tag_id = tt.id
	and d.topic_id in (select distinct t.id from topic t,topic_fragment f
	where t.id = f.topic_id and f.create_time > DATE_ADD(NOW(),interval
	#{minKingdomUpdateDays} day))
	and tt.id in(select tag_id from topic_tag_detail group by tag_id having
	COUNT(topic_id)>#{minKingdomCount})
	order by ut.score limit #{count}
	</select>
		<select id="getSysTagsInfo" resultType="com.me2me.content.model.TagInfo">
	select distinct m.tagId,m.tagName,m.cover_img from( select t.id as
	tagId,t.tag as tagName,t.cover_img from topic_tag t,user_tag u where
	u.type=1 and t.is_sys = 1 and t.status=0 and u.tag_id = t.pid and uid=
	#{uid}
	union
	select t.id as tagId,t.tag as tagName,t.cover_img from topic_tag t where
	t.is_sys = 1 and t.status=0) m,topic_tag_detail d
	where
	d.tag_id = m.tagId
	and d.topic_id in (select distinct t.id from topic t,topic_fragment f
	where t.id = f.topic_id and f.create_time > DATE_ADD(NOW(),interval
	#{minKingdomUpdateDays} day))
	and m.tagId in(select tag_id from topic_tag_detail group by tag_id having
	COUNT(topic_id)>#{minKingdomCount})
	</select>
	
</mapper>