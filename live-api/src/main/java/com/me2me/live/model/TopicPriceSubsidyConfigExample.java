package com.me2me.live.model;

import java.util.ArrayList;
import java.util.List;

public class TopicPriceSubsidyConfigExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public TopicPriceSubsidyConfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andLvIsNull() {
            addCriterion("lv is null");
            return (Criteria) this;
        }

        public Criteria andLvIsNotNull() {
            addCriterion("lv is not null");
            return (Criteria) this;
        }

        public Criteria andLvEqualTo(String value) {
            addCriterion("lv =", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvNotEqualTo(String value) {
            addCriterion("lv <>", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvGreaterThan(String value) {
            addCriterion("lv >", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvGreaterThanOrEqualTo(String value) {
            addCriterion("lv >=", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvLessThan(String value) {
            addCriterion("lv <", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvLessThanOrEqualTo(String value) {
            addCriterion("lv <=", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvLike(String value) {
            addCriterion("lv like", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvNotLike(String value) {
            addCriterion("lv not like", value, "lv");
            return (Criteria) this;
        }

        public Criteria andLvIn(List<String> values) {
            addCriterion("lv in", values, "lv");
            return (Criteria) this;
        }

        public Criteria andLvNotIn(List<String> values) {
            addCriterion("lv not in", values, "lv");
            return (Criteria) this;
        }

        public Criteria andLvBetween(String value1, String value2) {
            addCriterion("lv between", value1, value2, "lv");
            return (Criteria) this;
        }

        public Criteria andLvNotBetween(String value1, String value2) {
            addCriterion("lv not between", value1, value2, "lv");
            return (Criteria) this;
        }

        public Criteria andM1IsNull() {
            addCriterion("m1 is null");
            return (Criteria) this;
        }

        public Criteria andM1IsNotNull() {
            addCriterion("m1 is not null");
            return (Criteria) this;
        }

        public Criteria andM1EqualTo(Integer value) {
            addCriterion("m1 =", value, "m1");
            return (Criteria) this;
        }

        public Criteria andM1NotEqualTo(Integer value) {
            addCriterion("m1 <>", value, "m1");
            return (Criteria) this;
        }

        public Criteria andM1GreaterThan(Integer value) {
            addCriterion("m1 >", value, "m1");
            return (Criteria) this;
        }

        public Criteria andM1GreaterThanOrEqualTo(Integer value) {
            addCriterion("m1 >=", value, "m1");
            return (Criteria) this;
        }

        public Criteria andM1LessThan(Integer value) {
            addCriterion("m1 <", value, "m1");
            return (Criteria) this;
        }

        public Criteria andM1LessThanOrEqualTo(Integer value) {
            addCriterion("m1 <=", value, "m1");
            return (Criteria) this;
        }

        public Criteria andM1In(List<Integer> values) {
            addCriterion("m1 in", values, "m1");
            return (Criteria) this;
        }

        public Criteria andM1NotIn(List<Integer> values) {
            addCriterion("m1 not in", values, "m1");
            return (Criteria) this;
        }

        public Criteria andM1Between(Integer value1, Integer value2) {
            addCriterion("m1 between", value1, value2, "m1");
            return (Criteria) this;
        }

        public Criteria andM1NotBetween(Integer value1, Integer value2) {
            addCriterion("m1 not between", value1, value2, "m1");
            return (Criteria) this;
        }

        public Criteria andM2IsNull() {
            addCriterion("m2 is null");
            return (Criteria) this;
        }

        public Criteria andM2IsNotNull() {
            addCriterion("m2 is not null");
            return (Criteria) this;
        }

        public Criteria andM2EqualTo(Integer value) {
            addCriterion("m2 =", value, "m2");
            return (Criteria) this;
        }

        public Criteria andM2NotEqualTo(Integer value) {
            addCriterion("m2 <>", value, "m2");
            return (Criteria) this;
        }

        public Criteria andM2GreaterThan(Integer value) {
            addCriterion("m2 >", value, "m2");
            return (Criteria) this;
        }

        public Criteria andM2GreaterThanOrEqualTo(Integer value) {
            addCriterion("m2 >=", value, "m2");
            return (Criteria) this;
        }

        public Criteria andM2LessThan(Integer value) {
            addCriterion("m2 <", value, "m2");
            return (Criteria) this;
        }

        public Criteria andM2LessThanOrEqualTo(Integer value) {
            addCriterion("m2 <=", value, "m2");
            return (Criteria) this;
        }

        public Criteria andM2In(List<Integer> values) {
            addCriterion("m2 in", values, "m2");
            return (Criteria) this;
        }

        public Criteria andM2NotIn(List<Integer> values) {
            addCriterion("m2 not in", values, "m2");
            return (Criteria) this;
        }

        public Criteria andM2Between(Integer value1, Integer value2) {
            addCriterion("m2 between", value1, value2, "m2");
            return (Criteria) this;
        }

        public Criteria andM2NotBetween(Integer value1, Integer value2) {
            addCriterion("m2 not between", value1, value2, "m2");
            return (Criteria) this;
        }

        public Criteria andK1IsNull() {
            addCriterion("k1 is null");
            return (Criteria) this;
        }

        public Criteria andK1IsNotNull() {
            addCriterion("k1 is not null");
            return (Criteria) this;
        }

        public Criteria andK1EqualTo(Double value) {
            addCriterion("k1 =", value, "k1");
            return (Criteria) this;
        }

        public Criteria andK1NotEqualTo(Double value) {
            addCriterion("k1 <>", value, "k1");
            return (Criteria) this;
        }

        public Criteria andK1GreaterThan(Double value) {
            addCriterion("k1 >", value, "k1");
            return (Criteria) this;
        }

        public Criteria andK1GreaterThanOrEqualTo(Double value) {
            addCriterion("k1 >=", value, "k1");
            return (Criteria) this;
        }

        public Criteria andK1LessThan(Double value) {
            addCriterion("k1 <", value, "k1");
            return (Criteria) this;
        }

        public Criteria andK1LessThanOrEqualTo(Double value) {
            addCriterion("k1 <=", value, "k1");
            return (Criteria) this;
        }

        public Criteria andK1In(List<Double> values) {
            addCriterion("k1 in", values, "k1");
            return (Criteria) this;
        }

        public Criteria andK1NotIn(List<Double> values) {
            addCriterion("k1 not in", values, "k1");
            return (Criteria) this;
        }

        public Criteria andK1Between(Double value1, Double value2) {
            addCriterion("k1 between", value1, value2, "k1");
            return (Criteria) this;
        }

        public Criteria andK1NotBetween(Double value1, Double value2) {
            addCriterion("k1 not between", value1, value2, "k1");
            return (Criteria) this;
        }

        public Criteria andK2IsNull() {
            addCriterion("k2 is null");
            return (Criteria) this;
        }

        public Criteria andK2IsNotNull() {
            addCriterion("k2 is not null");
            return (Criteria) this;
        }

        public Criteria andK2EqualTo(Double value) {
            addCriterion("k2 =", value, "k2");
            return (Criteria) this;
        }

        public Criteria andK2NotEqualTo(Double value) {
            addCriterion("k2 <>", value, "k2");
            return (Criteria) this;
        }

        public Criteria andK2GreaterThan(Double value) {
            addCriterion("k2 >", value, "k2");
            return (Criteria) this;
        }

        public Criteria andK2GreaterThanOrEqualTo(Double value) {
            addCriterion("k2 >=", value, "k2");
            return (Criteria) this;
        }

        public Criteria andK2LessThan(Double value) {
            addCriterion("k2 <", value, "k2");
            return (Criteria) this;
        }

        public Criteria andK2LessThanOrEqualTo(Double value) {
            addCriterion("k2 <=", value, "k2");
            return (Criteria) this;
        }

        public Criteria andK2In(List<Double> values) {
            addCriterion("k2 in", values, "k2");
            return (Criteria) this;
        }

        public Criteria andK2NotIn(List<Double> values) {
            addCriterion("k2 not in", values, "k2");
            return (Criteria) this;
        }

        public Criteria andK2Between(Double value1, Double value2) {
            addCriterion("k2 between", value1, value2, "k2");
            return (Criteria) this;
        }

        public Criteria andK2NotBetween(Double value1, Double value2) {
            addCriterion("k2 not between", value1, value2, "k2");
            return (Criteria) this;
        }

        public Criteria andK3IsNull() {
            addCriterion("k3 is null");
            return (Criteria) this;
        }

        public Criteria andK3IsNotNull() {
            addCriterion("k3 is not null");
            return (Criteria) this;
        }

        public Criteria andK3EqualTo(Double value) {
            addCriterion("k3 =", value, "k3");
            return (Criteria) this;
        }

        public Criteria andK3NotEqualTo(Double value) {
            addCriterion("k3 <>", value, "k3");
            return (Criteria) this;
        }

        public Criteria andK3GreaterThan(Double value) {
            addCriterion("k3 >", value, "k3");
            return (Criteria) this;
        }

        public Criteria andK3GreaterThanOrEqualTo(Double value) {
            addCriterion("k3 >=", value, "k3");
            return (Criteria) this;
        }

        public Criteria andK3LessThan(Double value) {
            addCriterion("k3 <", value, "k3");
            return (Criteria) this;
        }

        public Criteria andK3LessThanOrEqualTo(Double value) {
            addCriterion("k3 <=", value, "k3");
            return (Criteria) this;
        }

        public Criteria andK3In(List<Double> values) {
            addCriterion("k3 in", values, "k3");
            return (Criteria) this;
        }

        public Criteria andK3NotIn(List<Double> values) {
            addCriterion("k3 not in", values, "k3");
            return (Criteria) this;
        }

        public Criteria andK3Between(Double value1, Double value2) {
            addCriterion("k3 between", value1, value2, "k3");
            return (Criteria) this;
        }

        public Criteria andK3NotBetween(Double value1, Double value2) {
            addCriterion("k3 not between", value1, value2, "k3");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated do_not_delete_during_merge Sat Jul 15 12:04:29 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table topic_price_subsidy_config
     *
     * @mbggenerated Sat Jul 15 12:04:29 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}